// <auto-generated />
using System;
using IdealFinancialAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IdealFinancialAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IdealFinancialAPI.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .IsRequired();

                    b.Property<double>("AvailableFunds");

                    b.Property<double>("Balance");

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountNumber = "12345",
                            AvailableFunds = 100000.0,
                            Balance = 0.0,
                            CreatedAt = new DateTime(2019, 10, 13, 19, 16, 34, 275, DateTimeKind.Local).AddTicks(9439),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            AccountNumber = "332456",
                            AvailableFunds = 200000.0,
                            Balance = 0.0,
                            CreatedAt = new DateTime(2019, 10, 13, 19, 16, 34, 278, DateTimeKind.Local).AddTicks(2638),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("IdealFinancialAPI.Models.CreditLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<double>("Amount");

                    b.Property<DateTime?>("CreatedAt");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("CreditLines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            Amount = 100000.0,
                            CreatedAt = new DateTime(2019, 10, 13, 19, 16, 34, 278, DateTimeKind.Local).AddTicks(5340)
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 2,
                            Amount = 200000.0,
                            CreatedAt = new DateTime(2019, 10, 13, 19, 16, 34, 278, DateTimeKind.Local).AddTicks(5869)
                        });
                });

            modelBuilder.Entity("IdealFinancialAPI.Models.Transactions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<double>("Amount");

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<int>("TypeTxn");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("IdealFinancialAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Maria",
                            Password = "12345mo",
                            UserName = "maria12345"
                        });
                });

            modelBuilder.Entity("IdealFinancialAPI.Models.Account", b =>
                {
                    b.HasOne("IdealFinancialAPI.Models.User", "User")
                        .WithMany("Accounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IdealFinancialAPI.Models.CreditLine", b =>
                {
                    b.HasOne("IdealFinancialAPI.Models.Account", "Account")
                        .WithMany("CreditLine")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IdealFinancialAPI.Models.Transactions", b =>
                {
                    b.HasOne("IdealFinancialAPI.Models.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
